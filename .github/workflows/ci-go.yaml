name: Go

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: ['1.23']

    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'
          cache-dependency-path: subdir/go.sum

      - name: Install dependencies
        run: go mod tidy

      - name: Run tests
        run: go test ./...

      - name: Debug GitHub directory
        run: ls -R

      # Setup AWS Credentials
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          # aws-access-key-id: ${{ secrets.AWS_SECRET_KEY_ID }}
          # aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          role-session-name: GitHubActions
          aws-region: us-east-1

      - name: Verify AWS Credentials
        run: aws sts get-caller-identity

      # CDK Build
      - name: Install AWS CDK
        run: npm install -g aws-cdk

      - name: CDK Synth
        run: cdk synth --app "go run bin/cdk.go"
        env:
          ACCOUNT_ID: ${{ secrets.ACCOUNT_ID }}
          ACC_GITHUB_OWNER: ${{ secrets.ACC_GITHUB_OWNER }}
          ACC_GITHUB_REPO: ${{ secrets.ACC_GITHUB_REPO }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
        
      - name: Get CodeBuild and CodePipeline Names
        run: |
          # Get CodeBuild Project Name
          CODEBUILD_PROJECT=$(aws codebuild list-projects --query "projects[?starts_with(@, 'CodeBuildV1')]" --output text | tr -d '[:space:]')
          echo "Extracted CodeBuild Project: $CODEBUILD_PROJECT"
          echo "CODEBUILD_PROJECT=$CODEBUILD_PROJECT" >> $GITHUB_ENV
        
          # Get CodePipeline Name
          CODEPIPELINE_NAME=$(aws codepipeline list-pipelines --query "pipelines[?starts_with(name, 'CodePipeline')].name" --output text | tr -d[:space:]')
          echo "Extracted CodePipeline Name: $CODEPIPELINE_NAME"
          echo "CODEPIPELINE_NAME=$CODEPIPELINE_NAME" >> $GITHUB_ENV
        
      - name: Trigger AWS CodeBuild
        run: aws codebuild start-build --project-name "$CODEBUILD_PROJECT" --region "$AWS_REGION"
        
      - name: Trigger AWS CodePipeline
        run: aws codepipeline start-pipeline-execution --name "$CODEPIPELINE_NAME"
        